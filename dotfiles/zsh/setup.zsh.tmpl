local zgenom_dir="$ZSHDIR/zgenom"
local plugins_dir="$ZSHDIR/plugins"
local iterm_dir="$ZSHDIR/iterm"

local fzf_dir="$LOCALDIR/fzf"
{{ if eq .chezmoi.os "darwin" }}
  {{ if eq .chezmoi.arch "arm64" }}
local brew_dir="/opt/homebrew"
  {{ else if eq .chezmoi.arch "x86_64" }}
local brew_dir="/usr/local/Homebrew"
  {{ end }}
if has-cmd "brew"; then
  brew_dir="$(brew --prefix)"
fi
{{ end }}

# Install plugins and tools

# zgenom and plugins
function install-zgenom() {
  git clone https://github.com/jandamm/zgenom.git "$zgenom_dir"
}
function install-alias-maker() {
  git clone https://github.com/MefitHp/alias-maker.git "$plugins_dir/alias-maker"
}

# fzf
function install-fzf() {
{{ if eq .chezmoi.os "darwin" }}
  brew install fzf
{{ else }}
  git clone --depth 1 https://github.com/junegunn/fzf.git "$fzf_dir"
  "$fzf_dir/install" --key-bindings --completion --no-update-rc
{{ end }}
}
function update-fzf() {
{{ if eq .chezmoi.os "darwin" }}
  brew upgrade fzf
{{ else }}
  cd "$fzf_dir" && git pull && "$fzf_dir/install" --key-bindings --completion --no-update-rc
{{ end }}
}

{{ if eq .chezmoi.os "darwin" }}
# brew
function wdh-install-brew-utils() { # TODO: use brew bundle and a run_once_ script with chezmoi to keep this out of 
  # general shell tools
  brew install coreutils
  brew install gnu-utils # replaces macos utils with better gnu versions
  # brew install stow
  brew install tmux
  brew install ripgrep # grep alternative
  brew install jq      # json parser and formatter for command line
  brew install thefuck # correct your previous command by typing fuck,
  brew install chezmoi
  brew install fd

  # tools that generate previews for fzf-zsh-plugin
  brew install bat
  brew install exa
  brew install chafa
  brew install exiftool
  brew install lesspipe

  # build tools and runtimes
  brew install go
  brew install make
  brew install gcc
  brew install node
  brew install pyenv

  # dev tools
  brew install doctl
  # NOTE: cli bins will not be added to path until docker desktop is launched the first time
  brew install --cask docker # docker desktop

  brew install zstd # faster and better compression than gzip

  brew install --cask qmk-toolbox

  brew install --cask --no-quarantine syntax-highlight # get syntax highlighting in quicklook
}
function install-brew() {
  /bin/bash -c "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/HEAD/install.sh)"
  wdh-install-brew-utils
}
{{ else }}
# Brew functions would be here if you were on a mac
{{ end }}

# edgedb
function install-edgedb() {
  curl --proto '=https' --tlsv1.2 -sSf https://sh.edgedb.com | sh
}

# Load plugins and tools

function _load-zgenom() {
  # load zgenom
  source "$zgenom_dir/zgenom.zsh"

  # Check for plugin and zgenom updates every 7 days
  # This does not increase the startup time.
  zgenom autoupdate

  # only runs when .zgenom/sources/init.zsh doesn't exist
  # use zgenom reset to delete init.zsh
  if ! zgenom saved; then
    echo "Creating a zgenom save"

    # Add this if you experience issues with missing completions or errors mentioning compdef.
    # zgenom compdef

    # Ohmyzsh base library
    # You can also cherry pick just parts of the base library.
    # Not loading the base set of ohmyzsh libraries might lead to issues.
    # While you can do it, I won't recommend it unless you know how to fix
    # those issues yourself.
    zgenom ohmyzsh

    # Plugins

    zgenom load romkatv/powerlevel10k powerlevel10k
    zgenom load zsh-users/zsh-completions src
    zgenom load chr-fritz/docker-completion.zshplugin # loads docker completions from the mac app
    # zgenom load joshskidmore/zsh-fzf-history-search
    zgenom load unixorn/fzf-zsh-plugin
    zgenom load Aloxaf/fzf-tab                        # NOTE: fzf-tab needs to be loaded after compinit, but before plugins which will wrap widgets, such as zsh-autosuggestions or fast-syntax-highlighting!!
    zgenom load zpm-zsh/colorize
    zgenom load chrissicool/zsh-256color # 256 color support
    zgenom load mafredri/zsh-async
    zgenom load decayofmind/zsh-fast-alias-tips # gives hints/reminders after using a command that's been aliased
    # alternative for alias hints:
    #   zgenom load akash329d/zsh-alias-finder

    # Very cool plugin that generates zsh completion functions for commands
    # if they have getopt-style help text. It doesn't generate them on the fly,
    # you'll have to explicitly generate a completion, but it's still quite cool.
    # zgenom load RobSis/zsh-completion-generator

    # alias-maker
    no-has-dir "$ZSHDIR/plugins" install-alias-maker
    zgenom load "$plugins_dir/alias-maker"

    # local plugins copied from zsh-utlis
    zgenom load "$plugins_dir/utils/editor"
    zgenom load "$plugins_dir/utils/history"


    zgenom load zsh-users/zsh-autosuggestions
    # always load syntax highlighting at the end
    zgenom load zdharma-continuum/fast-syntax-highlighting
    # zgenom load zsh-users/zsh-syntax-highlighting # NOTE zsh-syntax-highlighting must be the last plugin loaded

    zgenom save
  fi
}

function _check-installed() {
  # check zgenom
  no-has-dir "$zgenom_dir" install-zgenom 'installing zgenom'
  # chech fzf
  no-has-dir "$fzf_dir" install-fzf 'installing fzf'
  {{ if eq .chezmoi.os "darwin" }}
  # check brew
  no-has-cmd "brew" install-brew 'installing brew'
  {{ end }}
  # check edgedb
  no-has-cmd "edgedb" install-edgedb 'installing edgedb-cli'
  # intall go tools
  has-cmd "go" "go install github.com/cosmtrek/air@latest"
}

{{ if eq .chezmoi.os "darwin" }}
# set the login shell to the brew version of zsh
function _set-login-shell() {
  if [[ $(which zsh) == "/usr/local/bin/zsh" ]]; then
    # already set
    return 0
  fi
  if no-has-file "/usr/local/bin/zsh"; then
    echo "Unable to set login shell to homebrew version of zsh: /usr/local/bin/zsh does not exist"
    return 1
  fi
  echo "Setting login shell to brew version of zsh"
  echo "This requires sudo privileges. Enter your password:"
  local password
  read -sp "Password: " password
  echo $password | sudo -S dscl . change /users/$USER UserShell /bin/bash /usr/local/bin/zsh
}
{{ end }}

# miscellanea that i don't know where else to put
function _miscellanea() {
  # bind cmd+backspace to delete line
  bindkey "^U" backward-kill-line
  # don't know if this is necessary since its in my .gitconfig.
  git config --global core.excludesFile "$GITDIR/gitignore"
}

#### RUN ####

function run-zsh-setup() {
  _check-installed
  _set-login-shell
  _load-zgenom
  no-has-cmd "configure-plugins" "source $ZSHDIR/plugins.zsh"
  configure-plugins
  _miscellanea
}
