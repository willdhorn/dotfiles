# This is Git's per-user configuration file.
[user]
	name = will
	email = 88556285+willdhorn@users.noreply.github.com
	
[pretty]
	# credit: this guy: https://github.com/alfunx/.dotfiles/blob/2d22e8de8a63432909c005991698b41ab39b6f7f/.gitconfig#L227-L235
	# o = one line
	# c = two lines per commit with newlines inbetween (compact)

	# log
	lo  = tformat:%C(auto)%h%C(reset)%C(auto)%d%C(reset) %s %C(italic blue)%ad%C(reset) %C(241)%aN%C(reset)
	lc  =  format:%C(auto)%h%C(reset) %C(white)-%C(reset) %C(italic blue)%ad%C(reset) %C(italic cyan)(%ar)%C(reset)%C(auto)%d%C(reset)%n %C(white)⤷%C(reset) %s %C(241)- %aN <%aE>%C(reset)%n

	# reflog
	rlo = tformat:%C(auto)%h%C(reset) %C(bold yellow)(%C(magenta)%gd%C(bold yellow))%C(reset)%C(auto)%d%C(reset) %gs %C(italic blue)%ad%C(reset) %C(241)%aN%C(reset)
	rlc =  format:%C(auto)%h%C(reset) %C(white)-%C(reset) %C(italic blue)%ad%C(reset) %C(italic cyan)(%ar)%C(reset)%C(auto)%d%C(reset)%n %C(white)⤷%C(reset) %s %C(241)- %aN <%aE>%C(reset)%n %C(white)⤷%C(reset) %C(bold yellow)(%C(magenta)%gd%C(bold yellow))%C(reset) %gs %C(241)- %gN <%gE>%C(reset)%n

[alias]
	aa = add -A

	# commit
	c    = commit
	cf   = commit --no-verify
	ca   = commit --amend
	caf  = commit --amend --no-verify
	can  = commit --amend --no-edit
	canf = commit --amend --no-edit --no-verify
	#
	# Add all and Commit
	ac    = "!git aa && git c"
	acf   = "!git aa && git cf"
	aca   = "!git aa && git ca"
	acaf  = "!git aa && git caf"
	acan  = "!git aa && git can"
	acanf = "!git aa && git canf"
	#
	# Commit with message
	cm   = "!f() { git c -m \"$*\"; }; f"
	cam  = "!f() { git ca -m \"$*\"; }; f"
	camf = "!f() { git caf -m \"$*\"; }; f"
	#
	# Add all and Commit with message
	acm   = "!f() { git ac -m \"$*\"; }; f"
	acmf  = "!f() { git acf -m \"$*\"; }; f"
	acam  = "!f() { git aca -m \"$*\"; }; f"
	acamf = "!f() { git acaf -m \"$*\"; }; f"

	# reset
	undo = reset --soft HEAD~
	unstage = reset --soft HEAD^
	forget = reset --hard origin

	# log
	l  = log --pretty=lc --graph
	lo = log --pretty=lo --graph --date=human
	ll = log --pretty=lo -graph --numstat

	# status
	s  = status -sM
	ss = status -M

	# list aliases
	lsa = "!git config -l | grep alias | cut -c 7-"
	
	# Merging
	ours = "!f() { git co --ours $@ && git add $@; }; f"
	theirs = "!f() { git co --theirs $@ && git add $@; }; f"
	# Changes [branch] name to done-[branch]
	done = "!f() { git branch | grep "$1" | cut -c 3- | grep -v done | xargs -I{} git branch -m {} done-{}; }; f"
	
	# Push
	p = push
	pf = push -f
	
	# Various
	co = checkout
	cp = cherry-pick
	br = branch
	f = ls-files --deduplicate

	# git git ...
	git = "!git"

[push]
	# automatically sets upstream of new branches
	autoSetupRemote = true
	default = simple
[pull]
	rebase = true
[filter "lfs"]
	process = git-lfs filter-process
	required = true
	clean = git-lfs clean -- %f
	smudge = git-lfs smudge -- %f
[init]
	defaultBranch = main
[merge]
	tool = vscode
[mergetool "vscode"]
	cmd = code --wait --merge $REMOTE $LOCAL $BASE $MERGED
[diff]
	tool = vscode
	algorithm = histogram
[difftool "vscode"]
	cmd = code --wait --diff $LOCAL $REMOTE
[core]
	excludesFile = ~/dotfiles/git/gitignore